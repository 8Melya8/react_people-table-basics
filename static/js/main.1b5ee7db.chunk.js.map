{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Function/Function.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavigationLink","to","title","className","isActive","classNames","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","tableHeads","PeopleTable","people","useParams","map","th","born","died","mother","motherName","father","fatherName","findPersons","persons","find","mom","dad","PeoplePages","useState","dataPersons","setDataPersons","isLoading","setIsLoading","loadError","setLoadError","useEffect","fetchData","loadedPeople","length","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"qQAQaA,EAAkC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACpD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGF,GAGN,E,4BCXM,SAASI,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKZ,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECMTa,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAEnB,OACE,cAAC,IAAD,CACEnB,GAAE,kBAAaiB,GACff,UAAWE,IAAW,CAAE,kBAA2B,MAARc,IAF7C,SAIGC,GAGN,ECVKC,EAAa,CAAC,OAAQ,MAAO,OAAQ,OAAQ,SAAU,UAEhDC,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/BL,EAASM,cAATN,KAER,OACE,wBACE,UAAQ,cACRf,UAAU,uDAFZ,UAIE,gCACE,6BACGkB,EAAWI,KAAI,SAAAC,GAAE,OAChB,6BAAcA,GAALA,EADO,QAMtB,gCACGH,EAAOE,KAAI,SAAAR,GAAM,OAChB,qBACE,UAAQ,SAERd,UAAWe,IAASD,EAAOC,KACvB,yBACA,GALN,UAOE,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAGtB,6BAAKA,EAAOE,MACZ,6BAAKF,EAAOU,OACZ,6BAAKV,EAAOW,OACZ,6BACGX,EAAOY,OACJ,cAAC,EAAD,CAAYZ,OAAQA,EAAOY,SAC3BZ,EAAOa,YAAc,MAE3B,6BACGb,EAAOc,OACJ,cAAC,EAAD,CAAYd,OAAQA,EAAOc,SAC3Bd,EAAOe,YAAc,QApBtBf,EAAOC,KAHE,QA8BzB,E,QCxDYe,EAAc,SAACC,GAC1B,OAAOA,EAAQT,KAAI,SAAAR,GAAM,kCACpBA,GADoB,IAEvBY,OAAQK,EAAQC,MAAK,SAAAC,GAAG,OAAIA,EAAIhB,OAASH,EAAOa,UAAxB,IACxBC,OAAQG,EAAQC,MAAK,SAAAE,GAAG,OAAIA,EAAIjB,OAASH,EAAOe,UAAxB,KAHD,GAK1B,ECDYM,EAAc,WACzB,MAAsCC,mBAAmB,IAAzD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,uHAEazC,IAFb,OAER0C,EAFQ,OAIdP,EAAeR,EAAYe,IAJb,gDAMdH,GAAa,GANC,yBAQdF,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,IAGD,qCACE,oBAAI5C,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGuC,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqBzC,UAAU,kBAA1C,kCAKDqC,EAAYS,OAAS,GAAK,cAAC,EAAD,CAAa1B,OAAQiB,KAE9CI,IAAcF,IAAcF,EAAYS,QACxC,mBAAG,UAAQ,kBAAX,sDAQX,EChDYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACR/C,UAAU,iCACVgD,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKhD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAgBF,GAAG,IAAIC,MAAM,SAC7B,cAAC,EAAD,CAAgBD,GAAG,UAAUC,MAAM,kBAKzC,sBAAMC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,IAAIC,QAAS,oBAAIlD,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOiD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUpD,GAAG,IAAIqD,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CACED,KAAK,QACLC,QAAS,cAAC,EAAD,SAGb,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAIlD,UAAU,QAAd,uCA5BhB,ECGnBqD,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.1b5ee7db.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const NavigationLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport type Props = {\n  people: Person[],\n};\n\nconst tableHeads = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeads.map(th => (\n            <th key={th}>{th}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={slug === person.slug\n              ? 'has-background-warning'\n              : ''}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from '../../types';\n\nexport const findPersons = (persons: Person[]) => {\n  return persons.map(person => ({\n    ...person,\n    mother: persons.find(mom => mom.name === person.motherName),\n    father: persons.find(dad => dad.name === person.fatherName),\n  }));\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { findPersons } from '../Function/Function';\n\nexport const PeoplePages = () => {\n  const [dataPersons, setDataPersons] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const loadedPeople = await getPeople();\n\n        setDataPersons(findPersons(loadedPeople));\n      } catch {\n        setLoadError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {dataPersons.length > 0 && <PeopleTable people={dataPersons} />}\n\n          {!loadError && !isLoading && !dataPersons.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavigationLink } from './components/NavigationLink/NavigationLink';\nimport { PeoplePages } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavigationLink to=\"/\" title=\"Home\" />\n          <NavigationLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePages />} />\n            <Route\n              path=\":slug\"\n              element={<PeoplePages />}\n            />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}